// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SSTFU_V2.Models;

namespace SSTFU_V2.Migrations
{
    [DbContext(typeof(EFDBContext))]
    [Migration("20210522125755_init03")]
    partial class init03
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SSTFU_V2.Models.EObjectCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ObjectCategories");
                });

            modelBuilder.Entity("SSTFU_V2.Models.ERentPlace", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Coords")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RentPlaces");
                });

            modelBuilder.Entity("SSTFU_V2.Models.ESportInventory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RentPlaceId")
                        .HasColumnType("int");

                    b.Property<int?>("SportObjectId")
                        .HasColumnType("int");

                    b.Property<int?>("TypeId")
                        .HasColumnType("int");

                    b.Property<int>("TypeOfStorage")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RentPlaceId");

                    b.HasIndex("SportObjectId");

                    b.HasIndex("TypeId");

                    b.ToTable("SportInventorry");
                });

            modelBuilder.Entity("SSTFU_V2.Models.ESportInventoryType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SportInventoryTypes");
                });

            modelBuilder.Entity("SSTFU_V2.Models.ESportObject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Coords")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ObjectCategoryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ObjectCategoryId");

                    b.ToTable("SportObjects");
                });

            modelBuilder.Entity("SSTFU_V2.Models.EUser", b =>
                {
                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("banFlag")
                        .HasColumnType("bit");

                    b.Property<string>("fName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fatherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Token");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SSTFU_V2.Models.ESportInventory", b =>
                {
                    b.HasOne("SSTFU_V2.Models.ERentPlace", "RentPlace")
                        .WithMany("AvailableInventory")
                        .HasForeignKey("RentPlaceId");

                    b.HasOne("SSTFU_V2.Models.ESportObject", "SportObject")
                        .WithMany("AvailableInventory")
                        .HasForeignKey("SportObjectId");

                    b.HasOne("SSTFU_V2.Models.ESportInventoryType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId");

                    b.Navigation("RentPlace");

                    b.Navigation("SportObject");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("SSTFU_V2.Models.ESportObject", b =>
                {
                    b.HasOne("SSTFU_V2.Models.EObjectCategory", "ObjectCategory")
                        .WithMany()
                        .HasForeignKey("ObjectCategoryId");

                    b.Navigation("ObjectCategory");
                });

            modelBuilder.Entity("SSTFU_V2.Models.ERentPlace", b =>
                {
                    b.Navigation("AvailableInventory");
                });

            modelBuilder.Entity("SSTFU_V2.Models.ESportObject", b =>
                {
                    b.Navigation("AvailableInventory");
                });
#pragma warning restore 612, 618
        }
    }
}
